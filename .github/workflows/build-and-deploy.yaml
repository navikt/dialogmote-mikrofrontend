name: "Build and deploy"
on: push
jobs:
  build:
    name: "build"
    runs-on: "ubuntu-latest"
    outputs:
      cdn_url: ${{ steps.extract-manifest-url.outputs.url }}
      image: ${{ steps.docker-build-push.outputs.image }}

    permissions:
      contents: "read"
      id-token: "write"
      packages: "write"

    steps:
      - uses: "actions/checkout@v3"
      - uses: "actions/setup-node@v3"
        with:
          node-version: 16
          registry-url: "https://npm.pkg.github.com"
          cache: "npm"
      - name: "Install dependencies"
        run: "npm ci"
        env:
          NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: "Run Cypress tests"
        run: "npx cypress run --component"
      - name: "Build application"
        run: "npm run build"

      - name: cdn-upload
        id: cdn-upload
        uses: navikt/frontend/actions/cdn-upload/v1@main
        with:
          cdn-team-name: team-esyfo
          source: ./dist/
          destination: "dialogmote-mikrofrontend"

      - name: Extract manifest url
        id: extract-manifest-url
        run: |
          files="${{ steps.cdn-upload.outputs.uploaded }}"
          first_file=$(echo $files | cut -d',' -f1)
          echo "url=https://cdn.nav.no/$first_file" >> $GITHUB_OUTPUT

      - name: Build and push docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: team-esyfo
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy-dev:
    runs-on: "ubuntu-latest"
    needs: "build"
    steps:
      - uses: "actions/checkout@v3"
      - name: "Deploy to dev"
        uses: "nais/deploy/actions/deploy@v1"
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/dev-gcp/nais.yaml
          VAR: image=${{ needs.build.outputs.image }}

  update-manifest-dev:
    needs: "build"
    uses: navikt/tms-deploy/.github/workflows/oppdater-mikrofrontend-manifest.yaml@main
    with:
      cluster: dev-gcp
      id: syfo-dialog
      url: ${{needs.build.outputs.cdn_url}}
    secrets: inherit

  deploy-prod:
    if: github.ref == 'refs/heads/main'
    runs-on: "ubuntu-latest"
    needs: "build"
    steps:
      - uses: "actions/checkout@v3"
      - name: "Deploy to prod"
        uses: "nais/deploy/actions/deploy@v1"
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/prod-gcp/nais.yaml
          VAR: image=${{ needs.build.outputs.image }}

  update-manifest-prod:
    if: github.ref == 'refs/heads/main'
    needs: "build"
    uses: navikt/tms-deploy/.github/workflows/oppdater-mikrofrontend-manifest.yaml@main
    with:
      cluster: prod-gcp
      id: syfo-dialog
      url: ${{needs.build.outputs.cdn_url}}
    secrets: inherit
